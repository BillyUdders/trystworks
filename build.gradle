buildscript {
    ext {
        kotlinVersion = '1.1.51'
        springBootVersion = '2.0.0.M5'
    }

    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }

    dependencies {
	    	classpath("org.junit.platform:junit-platform-gradle-plugin:1.0.1")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'application'

group = 'com.trystworks'
version = '0.1'
sourceCompatibility = 1.8
mainClassName = 'com.trystworks.PostApplication'

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

jar {
    baseName = 'trystworks'
    version = '0.1'
}

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-mongodb-reactive')
    compile('org.springframework.boot:spring-boot-starter-webflux')
    compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}")
    compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")

    testCompile('org.springframework.boot:spring-boot-starter-test')
	  testCompile("org.junit.jupiter:junit-jupiter-api")
	  testRuntime("org.junit.jupiter:junit-jupiter-engine")
    testCompile('io.projectreactor:reactor-test')
}
